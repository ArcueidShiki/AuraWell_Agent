{
  "summary": {
    "total_tests": 12,
    "passed": 9,
    "failed": 3,
    "success_rate": 75.0,
    "average_response_time": 0.426
  },
  "details": [
    {
      "test_name": "GET /api/v1/health",
      "success": true,
      "status_code": 200,
      "expected_status": 200,
      "response_time": 0.002,
      "response_data": {
        "success": true,
        "status": "success",
        "message": "AuraWell API is healthy and running",
        "data": null,
        "timestamp": "2025-06-09T20:36:22.542335",
        "request_id": "95b33ee2-a0e6-433d-9ae4-1db0e1588f80"
      }
    },
    {
      "test_name": "POST /api/v1/auth/login",
      "success": true,
      "status_code": 200,
      "expected_status": 200,
      "response_time": 0.566,
      "response_data": {
        "success": true,
        "status": "success",
        "message": "Login successful",
        "data": {
          "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyXzAwMiIsImV4cCI6MTc0OTQ3NjE4M30.zBphnjq1MiqvCEVpX7tDUyLNqYRgaecJaorfmeVQaP8",
          "token_type": "bearer",
          "expires_in": 3600
        },
        "timestamp": "2025-06-09T20:36:23.109729",
        "request_id": "d737995d-4607-4c5f-af1d-637b8f771e63"
      }
    },
    {
      "test_name": "POST /api/v1/chat",
      "success": false,
      "error": "[Errno None] Can not write request body for http://127.0.0.1:8000/api/v1/chat",
      "response_time": 0
    },
    {
      "test_name": "GET /api/v1/user/profile",
      "success": true,
      "status_code": 200,
      "expected_status": 200,
      "response_time": 2.03,
      "response_data": {
        "success": true,
        "status": "success",
        "message": "User profile retrieved successfully",
        "data": null,
        "timestamp": "2025-06-09T20:36:25.140224",
        "request_id": "364b4b59-df10-4306-97cf-6fd5a31016c6",
        "user_id": "user_002",
        "display_name": "User 002",
        "email": "user_002@example.com",
        "age": 25,
        "gender": "other",
        "height_cm": 170.0,
        "weight_kg": 70.0,
        "activity_level": "moderately_active",
        "created_at": "2025-06-09T12:36:25.140224+00:00",
        "updated_at": "2025-06-09T12:36:25.140224+00:00"
      }
    },
    {
      "test_name": "PUT /api/v1/user/profile",
      "success": false,
      "status_code": 500,
      "expected_status": 200,
      "response_time": 2.459,
      "response_data": {
        "success": false,
        "status": "error",
        "message": "Failed to update user profile",
        "data": null,
        "timestamp": "2025-06-09T20:36:27.599727",
        "request_id": "2d420803-e0e2-4664-932b-0ddf29fbe9c7",
        "error_code": "SYSTEM_1701",
        "details": {
          "path": "/api/v1/user/profile"
        }
      }
    },
    {
      "test_name": "GET /api/v1/health/summary",
      "success": true,
      "status_code": 200,
      "expected_status": 200,
      "response_time": 0.004,
      "response_data": {
        "success": true,
        "status": "success",
        "message": "Health summary retrieved successfully",
        "data": null,
        "timestamp": "2025-06-09T20:36:27.603428",
        "request_id": "b356d1d0-2c27-4e03-b9ee-88007d2d92bc",
        "user_id": "user_002",
        "period_start": "2025-06-03",
        "period_end": "2025-06-09",
        "activity_summary": null,
        "sleep_summary": null,
        "average_heart_rate": null,
        "weight_trend": null,
        "key_insights": []
      }
    },
    {
      "test_name": "GET /api/v1/health/summary?days=14",
      "success": true,
      "status_code": 200,
      "expected_status": 200,
      "response_time": 0.003,
      "response_data": {
        "success": true,
        "status": "success",
        "message": "Health summary retrieved successfully",
        "data": null,
        "timestamp": "2025-06-09T20:36:27.607531",
        "request_id": "1b5c7a08-13f9-4a87-ba56-eb547b3a9ae3",
        "user_id": "user_002",
        "period_start": "2025-05-27",
        "period_end": "2025-06-09",
        "activity_summary": null,
        "sleep_summary": null,
        "average_heart_rate": null,
        "weight_trend": null,
        "key_insights": []
      }
    },
    {
      "test_name": "GET /api/v1/health/goals",
      "success": true,
      "status_code": 200,
      "expected_status": 200,
      "response_time": 0.003,
      "response_data": {
        "success": true,
        "status": "success",
        "message": "Health goals retrieved successfully",
        "data": null,
        "timestamp": "2025-06-09T20:36:27.610087",
        "request_id": "a1644839-c583-4897-a43a-bf56be0e7da6",
        "goals": [
          {
            "goal_id": "goal_user_002_steps_001",
            "goal_type": "steps",
            "target_value": 10000.0,
            "target_unit": "steps/day",
            "current_value": 7500.0,
            "progress_percentage": 75.0,
            "target_date": "2025-07-09",
            "description": "Daily step goal for better fitness",
            "created_at": "2025-06-04T20:36:27.610087",
            "updated_at": "2025-06-09T20:36:27.610087"
          },
          {
            "goal_id": "goal_user_002_weight_loss_001",
            "goal_type": "weight_loss",
            "target_value": 5.0,
            "target_unit": "kg",
            "current_value": 2.0,
            "progress_percentage": 40.0,
            "target_date": "2025-09-07",
            "description": "Lose 5kg for better health",
            "created_at": "2025-05-30T20:36:27.610087",
            "updated_at": "2025-06-09T20:36:27.610087"
          }
        ],
        "total_count": 2
      }
    },
    {
      "test_name": "POST /api/v1/health/goals",
      "success": false,
      "status_code": 422,
      "expected_status": 200,
      "response_time": 0.005,
      "response_data": {
        "detail": [
          {
            "type": "value_error",
            "loc": [
              "body",
              "target_date"
            ],
            "msg": "Value error, Target date cannot be in the past",
            "input": "2025-02-01",
            "ctx": {
              "error": {}
            }
          }
        ]
      }
    },
    {
      "test_name": "GET /api/v1/achievements",
      "success": true,
      "status_code": 200,
      "expected_status": 200,
      "response_time": 0.001,
      "response_data": {
        "success": true,
        "status": "success",
        "message": "Achievements retrieved successfully",
        "data": null,
        "timestamp": "2025-06-09T20:36:27.619268",
        "request_id": "b1123a23-a218-453e-ad49-04d4e654889c",
        "achievements": [
          {
            "achievement_id": "ach_user_002_daily_steps",
            "title": "First Steps",
            "description": "ÂÆåÊàêÁ¨¨‰∏ÄÊ¨°Ê≠•Êï∞ËÆ∞ÂΩï",
            "category": "activity",
            "progress": 100.0,
            "is_completed": true,
            "completed_at": "2025-06-09T20:36:27.618042",
            "reward_points": 10
          },
          {
            "achievement_id": "ach_user_002_consecutive_days",
            "title": "Early Bird",
            "description": "ËøûÁª≠7Â§©Êó©Ëµ∑ËøêÂä®",
            "category": "consistency",
            "progress": 42.8,
            "is_completed": false,
            "completed_at": null,
            "reward_points": 25
          },
          {
            "achievement_id": "ach_user_002_distance_covered",
            "title": "Distance Walker",
            "description": "ÂçïÊó•Ê≠•Ë°åË∑ùÁ¶ªË∂ÖËøá5ÂÖ¨Èáå",
            "category": "distance",
            "progress": 78.5,
            "is_completed": false,
            "completed_at": null,
            "reward_points": 15
          },
          {
            "achievement_id": "ach_user_002_calorie_burn",
            "title": "Calorie Burner",
            "description": "ÂçïÊó•ÁáÉÁÉßÂç°Ë∑ØÈáåË∂ÖËøá500",
            "category": "calories",
            "progress": 65.2,
            "is_completed": false,
            "completed_at": null,
            "reward_points": 20
          }
        ],
        "total_points": 10,
        "completed_count": 1,
        "in_progress_count": 3
      }
    },
    {
      "test_name": "GET /openapi.json",
      "success": true,
      "status_code": 200,
      "expected_status": 200,
      "response_time": 0.037,
      "response_data": {
        "openapi": "3.1.0",
        "info": {
          "title": "AuraWell Health Assistant API",
          "description": "\n        ## AuraWell Health Assistant API\n\n        A comprehensive REST API for personalized health lifestyle orchestration.\n\n        ### Features\n        - ü§ñ **AI-Powered Chat**: Natural language health consultations\n        - üë§ **User Profiles**: Comprehensive user profile management\n        - üìä **Health Data**: Activity, sleep, and nutrition tracking\n        - üéØ **Goal Setting**: Personalized health goal management\n        - üèÜ **Achievements**: Gamified progress tracking\n        - üîê **JWT Authentication**: Secure API access\n\n        ### Authentication\n        Most endpoints require JWT authentication. Use the `/api/v1/auth/login` endpoint to obtain an access token.\n\n        ### Rate Limiting\n        API requests are monitored for performance. Requests taking longer than 500ms are logged for optimization.\n\n        ### Support\n        For API support, please contact the AuraWell development team.\n        ",
          "version": "1.0.0"
        },
        "paths": {
          "/api/v1/auth/login": {
            "post": {
              "tags": [
                "Authentication"
              ],
              "summary": "Login",
              "description": "Authenticate user and return JWT token\n\nArgs:\n    login_request: User login credentials\n\nReturns:\n    JWT access token and metadata\n\nRaises:\n    AuthenticationException: If authentication fails",
              "operationId": "login_api_v1_auth_login_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/LoginRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TokenResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/chat": {
            "post": {
              "tags": [
                "Chat"
              ],
              "summary": "Chat",
              "description": "Process chat message and return AI response\n\n‰ΩøÁî®‰ª£ÁêÜË∑ØÁî±Âô®Ëá™Âä®ÈÄâÊã©ÊúÄÂêàÈÄÇÁöÑAgentÔºà‰º†ÁªüAgentÊàñLangChain AgentÔºâ\nÁ°Æ‰øùAPIÊé•Âè£ÂÆåÂÖ®ÂêëÂêéÂÖºÂÆπ\n\nArgs:\n    chat_request: Chat message and context\n    current_user_id: Authenticated user ID\n\nReturns:\n    AI response with conversation metadata\n\nRaises:\n    HTTPException: If chat processing fails",
              "operationId": "chat_api_v1_chat_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ChatRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ChatResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "BearerAuth": []
                }
              ]
            }
          },
          "/api/v1/user/profile": {
            "get": {
              "tags": [
                "User Profile"
              ],
              "summary": "Get User Profile",
              "description": "Get user profile information\n\nArgs:\n    current_user_id: Authenticated user ID\n    user_repo: User repository\n\nReturns:\n    User profile data\n\nRaises:\n    HTTPException: If user not found",
              "operationId": "get_user_profile_api_v1_user_profile_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/UserProfileResponse"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "BearerAuth": []
                }
              ]
            },
            "put": {
              "tags": [
                "User Profile"
              ],
              "summary": "Update User Profile",
              "description": "Update user profile information\n\nArgs:\n    profile_update: Profile update data\n    current_user_id: Authenticated user ID\n    user_repo: User repository\n\nReturns:\n    Updated user profile data\n\nRaises:\n    HTTPException: If update fails",
              "operationId": "update_user_profile_api_v1_user_profile_put",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/UserProfileRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/UserProfileResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "BearerAuth": []
                }
              ]
            }
          },
          "/api/v1/health/summary": {
            "get": {
              "tags": [
                "Health Data"
              ],
              "summary": "Get Health Summary",
              "description": "Get comprehensive health data summary\n\nArgs:\n    days: Number of days to include in summary (default: 7)\n    current_user_id: Authenticated user ID\n    health_repo: Health data repository\n    tools_registry: Health tools registry\n\nReturns:\n    Comprehensive health summary\n\nRaises:\n    HTTPException: If data retrieval fails",
              "operationId": "get_health_summary_api_v1_health_summary_get",
              "security": [
                {
                  "BearerAuth": []
                }
              ],
              "parameters": [
                {
                  "name": "days",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 7,
                    "title": "Days"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HealthSummaryResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/health/goals": {
            "get": {
              "tags": [
                "Health Goals"
              ],
              "summary": "Get Health Goals",
              "description": "Get user's health goals\n\nArgs:\n    current_user_id: Authenticated user ID\n    tools_registry: Health tools registry\n\nReturns:\n    List of user's health goals\n\nRaises:\n    HTTPException: If goal retrieval fails",
              "operationId": "get_health_goals_api_v1_health_goals_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HealthGoalsListResponse"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "BearerAuth": []
                }
              ]
            },
            "post": {
              "tags": [
                "Health Goals"
              ],
              "summary": "Create Health Goal",
              "description": "Create a new health goal\n\nArgs:\n    goal_request: Health goal data\n    current_user_id: Authenticated user ID\n    tools_registry: Health tools registry\n\nReturns:\n    Created health goal\n\nRaises:\n    HTTPException: If goal creation fails",
              "operationId": "create_health_goal_api_v1_health_goals_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HealthGoalRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HealthGoalResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "BearerAuth": []
                }
              ]
            }
          },
          "/api/v1/health/goals/paginated": {
            "get": {
              "tags": [
                "Health Goals"
              ],
              "summary": "Get Health Goals Paginated",
              "description": "Get user's health goals with pagination, sorting, and filtering\n\nArgs:\n    pagination: Pagination parameters (page, page_size)\n    sort: Sorting parameters (sort_by, sort_order)\n    filters: Filtering parameters (goal_type, status, dates, etc.)\n    current_user_id: Authenticated user ID\n    tools_registry: Health tools registry\n\nReturns:\n    Paginated list of health goals with metadata\n\nRaises:\n    AuraWellException: If data retrieval fails",
              "operationId": "get_health_goals_paginated_api_v1_health_goals_paginated_get",
              "security": [
                {
                  "BearerAuth": []
                }
              ],
              "parameters": [
                {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1,
                    "default": 1,
                    "title": "Page"
                  }
                },
                {
                  "name": "page_size",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "default": 20,
                    "title": "Page Size"
                  }
                },
                {
                  "name": "sort_by",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Sort By"
                  }
                },
                {
                  "name": "sort_order",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^(asc|desc)$"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "default": "desc",
                    "title": "Sort Order"
                  }
                },
                {
                  "name": "search",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "maxLength": 100
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Search"
                  }
                },
                {
                  "name": "status",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Status"
                  }
                },
                {
                  "name": "date_from",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Date From"
                  }
                },
                {
                  "name": "date_to",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Date To"
                  }
                },
                {
                  "name": "goal_type",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^(weight_loss|weight_gain|fitness|nutrition|sleep|steps)$"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Goal Type"
                  }
                },
                {
                  "name": "is_completed",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Is Completed"
                  }
                },
                {
                  "name": "target_date_from",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Target Date From"
                  }
                },
                {
                  "name": "target_date_to",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Target Date To"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PaginatedHealthGoalsResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/achievements": {
            "get": {
              "tags": [
                "Achievements"
              ],
              "summary": "Get Achievements",
              "description": "Get user achievements and progress\n\nArgs:\n    current_user_id: Authenticated user ID\n    achievement_repo: Achievement repository\n    tools_registry: Health tools registry\n\nReturns:\n    User achievements and progress data\n\nRaises:\n    HTTPException: If achievement retrieval fails",
              "operationId": "get_achievements_api_v1_achievements_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AchievementsResponse"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "BearerAuth": []
                }
              ]
            }
          },
          "/api/v1/health/activity": {
            "get": {
              "tags": [
                "Health Data"
              ],
              "summary": "Get Activity Data",
              "description": "Get user activity data\n\nArgs:\n    request: Health data query parameters\n    current_user_id: Authenticated user ID\n    tools_registry: Health tools registry\n\nReturns:\n    User activity data\n\nRaises:\n    HTTPException: If data retrieval fails",
              "operationId": "get_activity_data_api_v1_health_activity_get",
              "security": [
                {
                  "BearerAuth": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Date"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "maximum": 1000,
                        "minimum": 1
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Limit"
                  }
                }
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "title": "Data Types"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ActivityDataResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/health/sleep": {
            "get": {
              "tags": [
                "Health Data"
              ],
              "summary": "Get Sleep Data",
              "description": "Get user sleep data\n\nArgs:\n    request: Health data query parameters\n    current_user_id: Authenticated user ID\n    tools_registry: Health tools registry\n\nReturns:\n    User sleep data\n\nRaises:\n    HTTPException: If data retrieval fails",
              "operationId": "get_sleep_data_api_v1_health_sleep_get",
              "security": [
                {
                  "BearerAuth": []
                }
              ],
              "parameters": [
                {
                  "name": "start_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Start Date"
                  }
                },
                {
                  "name": "end_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Date"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "maximum": 1000,
                        "minimum": 1
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Limit"
                  }
                }
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "title": "Data Types"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SleepDataResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/health": {
            "get": {
              "tags": [
                "System"
              ],
              "summary": "Health Check",
              "description": "System health check endpoint\n\nReturns:\n    System status information",
              "operationId": "health_check_api_v1_health_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BaseResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/system/performance": {
            "get": {
              "tags": [
                "System"
              ],
              "summary": "Get Performance Metrics",
              "description": "Get system performance metrics\n\nReturns:\n    Performance statistics including response times and cache metrics",
              "operationId": "get_performance_metrics_api_v1_system_performance_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BaseResponse"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "BearerAuth": []
                }
              ]
            }
          },
          "/": {
            "get": {
              "tags": [
                "System"
              ],
              "summary": "Root",
              "description": "Root endpoint with API information\n\nReturns:\n    API welcome message and basic info",
              "operationId": "root__get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BaseResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "components": {
          "schemas": {
            "Achievement": {
              "properties": {
                "achievement_id": {
                  "type": "string",
                  "title": "Achievement Id"
                },
                "title": {
                  "type": "string",
                  "title": "Title"
                },
                "description": {
                  "type": "string",
                  "title": "Description"
                },
                "category": {
                  "type": "string",
                  "title": "Category"
                },
                "progress": {
                  "type": "number",
                  "maximum": 100.0,
                  "minimum": 0.0,
                  "title": "Progress"
                },
                "is_completed": {
                  "type": "boolean",
                  "title": "Is Completed",
                  "default": false
                },
                "completed_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Completed At"
                },
                "reward_points": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Reward Points"
                }
              },
              "type": "object",
              "required": [
                "achievement_id",
                "title",
                "description",
                "category",
                "progress"
              ],
              "title": "Achievement",
              "description": "Achievement data model"
            },
            "AchievementsResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                },
                "achievements": {
                  "items": {
                    "$ref": "#/components/schemas/Achievement"
                  },
                  "type": "array",
                  "title": "Achievements"
                },
                "total_points": {
                  "type": "integer",
                  "title": "Total Points"
                },
                "completed_count": {
                  "type": "integer",
                  "title": "Completed Count"
                },
                "in_progress_count": {
                  "type": "integer",
                  "title": "In Progress Count"
                }
              },
              "type": "object",
              "required": [
                "achievements",
                "total_points",
                "completed_count",
                "in_progress_count"
              ],
              "title": "AchievementsResponse",
              "description": "Achievements list response"
            },
            "ActivityDataResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "items": {
                    "$ref": "#/components/schemas/ActivitySummary"
                  },
                  "type": "array",
                  "title": "Data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                },
                "user_id": {
                  "type": "string",
                  "title": "User Id"
                },
                "total_records": {
                  "type": "integer",
                  "title": "Total Records"
                }
              },
              "type": "object",
              "required": [
                "data",
                "user_id",
                "total_records"
              ],
              "title": "ActivityDataResponse",
              "description": "Activity data response"
            },
            "ActivitySummary": {
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "title": "Date"
                },
                "steps": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Steps"
                },
                "distance_km": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Distance Km"
                },
                "calories_burned": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Calories Burned"
                },
                "active_minutes": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Active Minutes"
                },
                "exercise_sessions": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Exercise Sessions"
                }
              },
              "type": "object",
              "required": [
                "date"
              ],
              "title": "ActivitySummary",
              "description": "Activity summary data"
            },
            "BaseResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                }
              },
              "type": "object",
              "title": "BaseResponse",
              "description": "Base response model for all API endpoints"
            },
            "ChatRequest": {
              "properties": {
                "message": {
                  "type": "string",
                  "maxLength": 1000,
                  "minLength": 1,
                  "title": "Message"
                },
                "context": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Context"
                }
              },
              "type": "object",
              "required": [
                "message"
              ],
              "title": "ChatRequest",
              "description": "Chat conversation request"
            },
            "ChatResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                },
                "reply": {
                  "type": "string",
                  "title": "Reply"
                },
                "user_id": {
                  "type": "string",
                  "title": "User Id"
                },
                "conversation_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Conversation Id"
                },
                "tools_used": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Tools Used"
                }
              },
              "type": "object",
              "required": [
                "reply",
                "user_id"
              ],
              "title": "ChatResponse",
              "description": "Chat conversation response - ‰øùÊåÅÂêëÂêéÂÖºÂÆπÁöÑÊ†ºÂºè"
            },
            "HTTPValidationError": {
              "properties": {
                "detail": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "type": "array",
                  "title": "Detail"
                }
              },
              "type": "object",
              "title": "HTTPValidationError"
            },
            "HealthGoalRequest": {
              "properties": {
                "goal_type": {
                  "type": "string",
                  "pattern": "^(weight_loss|weight_gain|fitness|nutrition|sleep|steps)$",
                  "title": "Goal Type",
                  "description": "Type of health goal"
                },
                "target_value": {
                  "type": "number",
                  "exclusiveMinimum": 0.0,
                  "title": "Target Value",
                  "description": "Target value (must be positive)"
                },
                "target_unit": {
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 1,
                  "title": "Target Unit",
                  "description": "Unit of measurement (1-20 characters)"
                },
                "target_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Target Date",
                  "description": "Target completion date (optional)"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 500
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description",
                  "description": "Goal description (optional, max 500 characters)"
                }
              },
              "type": "object",
              "required": [
                "goal_type",
                "target_value",
                "target_unit"
              ],
              "title": "HealthGoalRequest",
              "description": "Health goal creation/update request"
            },
            "HealthGoalResponse": {
              "properties": {
                "goal_id": {
                  "type": "string",
                  "title": "Goal Id"
                },
                "goal_type": {
                  "type": "string",
                  "title": "Goal Type"
                },
                "target_value": {
                  "type": "number",
                  "title": "Target Value"
                },
                "target_unit": {
                  "type": "string",
                  "title": "Target Unit"
                },
                "current_value": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Current Value"
                },
                "progress_percentage": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Progress Percentage"
                },
                "target_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Target Date"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Updated At"
                }
              },
              "type": "object",
              "required": [
                "goal_id",
                "goal_type",
                "target_value",
                "target_unit",
                "created_at",
                "updated_at"
              ],
              "title": "HealthGoalResponse",
              "description": "Health goal response"
            },
            "HealthGoalsListResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                },
                "goals": {
                  "items": {
                    "$ref": "#/components/schemas/HealthGoalResponse"
                  },
                  "type": "array",
                  "title": "Goals"
                },
                "total_count": {
                  "type": "integer",
                  "title": "Total Count"
                }
              },
              "type": "object",
              "required": [
                "goals",
                "total_count"
              ],
              "title": "HealthGoalsListResponse",
              "description": "Health goals list response"
            },
            "HealthSummaryResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                },
                "user_id": {
                  "type": "string",
                  "title": "User Id"
                },
                "period_start": {
                  "type": "string",
                  "format": "date",
                  "title": "Period Start"
                },
                "period_end": {
                  "type": "string",
                  "format": "date",
                  "title": "Period End"
                },
                "activity_summary": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ActivitySummary"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "sleep_summary": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SleepSummary"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "average_heart_rate": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Average Heart Rate"
                },
                "weight_trend": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Weight Trend"
                },
                "key_insights": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Key Insights"
                }
              },
              "type": "object",
              "required": [
                "user_id",
                "period_start",
                "period_end"
              ],
              "title": "HealthSummaryResponse",
              "description": "Comprehensive health summary"
            },
            "LoginRequest": {
              "properties": {
                "username": {
                  "type": "string",
                  "maxLength": 50,
                  "minLength": 3,
                  "title": "Username",
                  "description": "Username (3-50 characters, alphanumeric and underscore only)"
                },
                "password": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 6,
                  "title": "Password",
                  "description": "Password (6-128 characters)"
                }
              },
              "type": "object",
              "required": [
                "username",
                "password"
              ],
              "title": "LoginRequest",
              "description": "User login request"
            },
            "PaginatedHealthGoalsResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Data retrieved successfully"
                },
                "data": {
                  "items": {
                    "$ref": "#/components/schemas/HealthGoalResponse"
                  },
                  "type": "array",
                  "title": "Data"
                },
                "pagination": {
                  "$ref": "#/components/schemas/PaginationMeta"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                }
              },
              "type": "object",
              "required": [
                "data",
                "pagination"
              ],
              "title": "PaginatedHealthGoalsResponse",
              "description": "Paginated health goals response"
            },
            "PaginationMeta": {
              "properties": {
                "page": {
                  "type": "integer",
                  "title": "Page"
                },
                "page_size": {
                  "type": "integer",
                  "title": "Page Size"
                },
                "total_pages": {
                  "type": "integer",
                  "title": "Total Pages"
                },
                "total_items": {
                  "type": "integer",
                  "title": "Total Items"
                },
                "has_next": {
                  "type": "boolean",
                  "title": "Has Next"
                },
                "has_previous": {
                  "type": "boolean",
                  "title": "Has Previous"
                }
              },
              "type": "object",
              "required": [
                "page",
                "page_size",
                "total_pages",
                "total_items",
                "has_next",
                "has_previous"
              ],
              "title": "PaginationMeta",
              "description": "Pagination metadata"
            },
            "ResponseStatus": {
              "type": "string",
              "enum": [
                "success",
                "error",
                "warning"
              ],
              "title": "ResponseStatus",
              "description": "API response status enumeration"
            },
            "SleepDataResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "items": {
                    "$ref": "#/components/schemas/SleepSummary"
                  },
                  "type": "array",
                  "title": "Data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                },
                "user_id": {
                  "type": "string",
                  "title": "User Id"
                },
                "total_records": {
                  "type": "integer",
                  "title": "Total Records"
                }
              },
              "type": "object",
              "required": [
                "data",
                "user_id",
                "total_records"
              ],
              "title": "SleepDataResponse",
              "description": "Sleep data response"
            },
            "SleepSummary": {
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "title": "Date"
                },
                "total_sleep_hours": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Total Sleep Hours"
                },
                "deep_sleep_hours": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Deep Sleep Hours"
                },
                "light_sleep_hours": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Light Sleep Hours"
                },
                "rem_sleep_hours": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Rem Sleep Hours"
                },
                "sleep_efficiency": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Sleep Efficiency"
                },
                "bedtime": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Bedtime"
                },
                "wake_time": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Wake Time"
                }
              },
              "type": "object",
              "required": [
                "date"
              ],
              "title": "SleepSummary",
              "description": "Sleep summary data"
            },
            "TokenData": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "title": "Access Token"
                },
                "token_type": {
                  "type": "string",
                  "title": "Token Type",
                  "default": "bearer"
                },
                "expires_in": {
                  "type": "integer",
                  "title": "Expires In",
                  "default": 3600
                }
              },
              "type": "object",
              "required": [
                "access_token"
              ],
              "title": "TokenData",
              "description": "JWT token data"
            },
            "TokenResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/TokenData"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                }
              },
              "type": "object",
              "title": "TokenResponse",
              "description": "JWT token response"
            },
            "UserProfileRequest": {
              "properties": {
                "display_name": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 100,
                      "minLength": 1
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Display Name",
                  "description": "Display name (1-100 characters)"
                },
                "email": {
                  "anyOf": [
                    {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Email",
                  "description": "Valid email address"
                },
                "age": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "maximum": 120.0,
                      "minimum": 13.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Age",
                  "description": "Age (13-120 years)"
                },
                "gender": {
                  "anyOf": [
                    {
                      "type": "string",
                      "pattern": "^(male|female|other)$"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Gender",
                  "description": "Gender (male, female, or other)"
                },
                "height_cm": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 300.0,
                      "minimum": 50.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Height Cm",
                  "description": "Height in centimeters (50-300 cm)"
                },
                "weight_kg": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 500.0,
                      "minimum": 20.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Weight Kg",
                  "description": "Weight in kilograms (20-500 kg)"
                },
                "activity_level": {
                  "anyOf": [
                    {
                      "type": "string",
                      "pattern": "^(sedentary|lightly_active|moderately_active|very_active|extremely_active)$"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Activity Level",
                  "description": "Activity level"
                }
              },
              "type": "object",
              "title": "UserProfileRequest",
              "description": "User profile update request"
            },
            "UserProfileResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "status": {
                  "$ref": "#/components/schemas/ResponseStatus",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "default": "Operation completed successfully"
                },
                "data": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                },
                "request_id": {
                  "type": "string",
                  "title": "Request Id"
                },
                "user_id": {
                  "type": "string",
                  "title": "User Id"
                },
                "display_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Display Name"
                },
                "email": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Email"
                },
                "age": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Age"
                },
                "gender": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Gender"
                },
                "height_cm": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Height Cm"
                },
                "weight_kg": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Weight Kg"
                },
                "activity_level": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Activity Level"
                },
                "created_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Created At"
                },
                "updated_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Updated At"
                }
              },
              "type": "object",
              "required": [
                "user_id"
              ],
              "title": "UserProfileResponse",
              "description": "User profile response"
            },
            "ValidationError": {
              "properties": {
                "loc": {
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "type": "array",
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              },
              "type": "object",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "title": "ValidationError"
            }
          },
          "securitySchemes": {
            "BearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        }
      }
    },
    {
      "test_name": "GET /api/v1/nonexistent",
      "success": true,
      "status_code": 404,
      "expected_status": 404,
      "response_time": 0.001,
      "response_data": {
        "detail": "Not Found"
      }
    }
  ]
}